# -*- coding: utf-8 -*-

from oscar.defaults import *
from oscar import OSCAR_MAIN_TEMPLATE_DIR
from oscar import get_core_apps
from zinnia import apps


"""
Django settings for blowgrow project.

Generated by 'django-admin startproject' using Django 1.9.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

location = lambda x: os.path.join(os.path.dirname(os.path.realpath(__file__)), '.', x)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4ahvh9i&o(j617bh-qlrxw=ov!8!$x-h-4(al0pfw76z(o+zmk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ '31.131.16.2']


# Application definition

INSTALLED_APPS = [

    'admin_tools', 
    'admin_tools.theming', 
    #'admin_tools.menu',     
    #'admin_tools.dashboard', 
    'admin_tools_zinnia', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    #'south',
    'bootstrap3',
    'growblog',
    'django_comments',
    'django-bitly',
    'tagging', 
    'mptt', 
    'zinnia',
    'django_xmlrpc',
    'bootstrap_themes',
    'django.contrib.admindocs',
    'django.contrib.staticfiles',
    'django.contrib.flatpages',
    'rest_framework',
    'oscarapi',
    #'cmsplugin_zinnia',
    'sekizai',
    #'sorl.thumbnail',
    'wiki',
    'wiki.plugins.attachments',
    'wiki.plugins.notifications',
    'wiki.plugins.images',
    'wiki.plugins.macros',
    'compressor',
    'widget_tweaks',
] + get_core_apps()


# ['apps.shipping']


SITE_ID = 1


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'oscar.apps.basket.middleware.BasketMiddleware',

'oscarapi.middleware.ApiBasketMiddleWare',

'oscarapi.signals.oscarapi_post_checkout',
 'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
 
]

ROOT_URLCONF = 'blowgrow.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            location('templates'),
            os.path.join(BASE_DIR, 'templates'),
            OSCAR_MAIN_TEMPLATE_DIR
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [

                'django.template.context_processors.debug',
                #'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                #'django.template.context_processors.i18n',
                'django.contrib.messages.context_processors.messages',                
                'django.template.context_processors.tz',
                'django.template.context_processors.static',
                'django.template.context_processors.media',
                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.promotions.context_processors.promotions',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.customer.notifications.context_processors.notifications',
                 #'oscar.templates.context_processors.metadata',
                'zinnia.context_processors.version',
                'django.template.context_processors.request',
                'sekizai.context_processors.sekizai',
            ],
            'loaders': [
            
                'admin_tools.template_loaders.Loader',
                'app_namespace.Loader',
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'django.template.loaders.eggs.Loader',

            ]
        },
    },
]

WSGI_APPLICATION = 'blowgrow.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'ATOMIC_REQUESTS': True,
    }
}


# Zinnia settings

from django.contrib.sites.models import Site
from django.core.urlresolvers import reverse
from zinnia.settings import PROTOCOL 
from zinnia.xmlrpc import ZINNIA_XMLRPC_METHODS 

#XMLRPC_METHODS = ZINNIA_XMLRPC_METHODS

#ZINNIA_URL_SHORTENER_BACKEND = 'zinnia.views.shortlinks.EntryShortLink'
#          def backend(entry):
#            return '%s://%s%s' % (PROTOCOL, #Site.objects.get_current().domain,
                              #reverse('zinnia_entry_shortlink', #args=[entry.pk]))



ZINNIA_URL_SHORTENER_BACKEND = 'path.to.your.url.shortener.module'

#Django-wiki settings

WIKI_ACCOUNT_HANDLING = True
WIKI_ACCOUNT_SIGNUP_ALLOWED = True

from django.core.urlresolvers import reverse_lazy
LOGIN_REDIRECT_URL = reverse_lazy('wiki:get', kwargs={'path': ''})

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'ru'

LANGUAGES = (
  ('ru', 'Russian'),
  ('en', 'English'),
)
 
MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'oscar.apps.basket.middleware.BasketMiddleware',
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


AUTHENTICATION_BACKENDS = (
    'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}


STATICFILES_DIRS = ( os.path.join( BASE_DIR, 'static' ), ) 

STATIC_ROOT = 'static/oscar/'
STATIC_URL = '/static/'
MEDIA_ROOT = 'media'
MEDIA_URL = '/media/'